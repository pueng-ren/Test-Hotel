{"version":3,"sources":["bg.jpg","Showhotel/ListHotel.js","Header/Head.js","Showhotel/Showhotel.js","Components/Model.js","Detail/BodyBooking.js","store/action/BookingActions.js","Detail/BookingRoom.js","Components/Message.js","Login/BodyLogin.js","Login/Login.js","store/action/AuthAction.js","Detail/Listproperty.js","Detail/Room.js","Map/SimpleMap.js","Detail/DetaiHotel.js","Booking/ListBooking.js","Booking/Booking.js","Header/Register.js","Header/NavLogin.js","Header/NavLogout.js","Header/NavBar.js","AppFooter.js","App.js","serviceWorker.js","store/reducer/AuthReducer.js","store/reducer/BookingReducer.js","store/reducer/RootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","Showhotel","name","this","props","Fragment","map","item","Item","style","margin","key","id","Image","src","image","Content","Header","as","Meta","className","Header2","Description","detail","Extra","Label","status","Button","primary","floated","to","NavLink","Icon","Component","Head","backgroundImage","logo","height","_isMounted","state","data","axios","get","then","res","setState","Container","align","Group","padding","divided","ListHotel","Model","setModal","dimmer","open","close","body","header","Modal","size","onClose","textAlign","Actions","BodyBooking","IdRoom","Room_name","DateStart","DateEnd","number","Loading","available","per_price","handleFormChange","e","target","value","handleSubmit","preventDefault","price","firebase","diff","DateDiff","Date","price_all","calculate","days","toLocaleDateString","Hotel_name","hotel_name","BookingActions","clearState","day","parseInt","console","log","id_hotel","Hotel","ref","onSubmit","Grid","columns","Row","Column","type","onChange","data-date-format","validators","errorMessages","placeholder","min","max","centered","compose","firebaseConnect","connect","authError","auth","dispatch","booking","getState","getFirestore","uid","BookingRoom","MessageExampleError","Message","negative","Body","password","email","checkLogin","label","onClick","bind","Login","authData","credentials","SingIn","signInWithEmailAndPassword","catch","err","Listproperty","i","Room","show","handleItemClick","room","Table","Cell","sizeRoom","disabled","hotel","SimpleMap","displayMarkers","position","lat","lng","lon","google","zoom","width","initialCenter","GoogleApiWrapper","apiKey","DetailHotel","activeItem","location","latiture","match","params","lontiture","property","detail_hotel","address","contact","celled","padded","HeaderCell","singleLine","name_hotel","ListBooking","num","profile","firstName","marginBottom","lastName","Register","birdday","handeleSubmit","newUser","SignUp","checkRegis","minLength","color","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","initials","NavLogin","Menu","active","SignOut","signOut","NavBar","links","NavLogout","secondary","AppFooter","App","exact","path","component","DetaiHotel","Booking","Boolean","window","hostname","initState","AuthReducer","action","BookingReducer","concat","RootReducer","combineReducers","firestoreReducer","firebaseReducer","app","require","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","styleLink","document","createElement","rel","href","head","appendChild","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fd9dcbaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.625fa74b.jpg\";","import React, { Component } from 'react'\nimport { Button, Icon, Item, Label } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\nimport {Redirect} from 'react-router-dom'\n\nclass Showhotel extends Component {\n\n\n    render() {\n        const name = this.props.name\n\n        const value =(id)=>{\n            return `/DetaiHotel/${id}`\n        }\n      \n        return (\n            <React.Fragment>\n                \n                {name.map((item) =>\n                    <Item style={{margin:'3%'}} key={item.id} >\n                        \n                        <Item.Image src={item.image} />\n                        <Item.Content>\n                            <Item.Header as='a'>{item.Header}</Item.Header>\n                            <Item.Meta>\n                                <span className='cinema'>{item.Header2}</span>\n                            </Item.Meta>\n                            <Item.Description>{item.detail}</Item.Description>\n                            <Item.Extra>\n                                <Label>{item.status}</Label>\n                                <Button primary floated='right' to={value(item.id)} as={NavLink}>\n                                    More Info\n                                <Icon name='right chevron' />\n                                </Button>\n                            </Item.Extra>\n\n                        </Item.Content>\n                    </Item>\n\n                )}\n            </React.Fragment>\n        )\n\n    }\n\n}\n\nexport default Showhotel\n\n","import React,{Component} from 'react'\nimport logo from '../bg.jpg'\nimport { Header} from 'semantic-ui-react'\n\nclass Head extends Component{\n    render(){\n        return (\n            <React.Fragment>\n                <Header className='body' as='h2' style={{backgroundImage: `url(${logo})`,height:'500px' }}> </Header>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Head","import React, { Component } from 'react'\nimport { Item, Container } from 'semantic-ui-react'\nimport ListHotel from './ListHotel'\nimport Head from '../Header/Head'\nimport axios from 'axios'\n\n\nclass Showhotel extends Component {\n\n    _isMounted = false;\n    state ={\n        data : []\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        axios.get(`https://cb5e1f83-a66c-46ba-b49b-5c52f546772a.mock.pstmn.io/hotel`)\n          .then(res => {\n            if (this._isMounted) {\n            const data = res.data.data;\n            this.setState({data:data})\n            }\n          })\n      }\n\n      componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n    render() {\n        const {data}=this.state\n        return (\n            <React.Fragment>\n                <Head />\n                <Container>\n                    <h1  style={{ margin: '5%' }} align='center'>ALL HOTELS</h1>\n                    <Item.Group style={{padding:'5%'}} divided>\n                        <ListHotel name={data} />\n                    </Item.Group>\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport default Showhotel","import React, { Component } from 'react'\nimport { Modal } from 'semantic-ui-react'\n\n\n\nclass Model extends Component {\n    \n    render() {\n        let { dimmer, open } = this.props.setModal\n        const {close,body,header} = this.props\n        return (\n            \n            <React.Fragment  >\n                 <Modal size='tiny' dimmer={dimmer} open={open} onClose={close}>\n                    <Modal.Header style={{textAlign:'center'}} >{header}</Modal.Header>\n                    <Modal.Content>\n                       {body}\n                    </Modal.Content>\n                    <Modal.Actions  style={{textAlign:'center'}}>\n                    </Modal.Actions>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n\n}\n\n\n\nexport default Model","import React, { Component } from 'react'\nimport { Grid, Button } from 'semantic-ui-react'\nimport { Form, Input } from 'semantic-ui-react-form-validator'\nimport { connect } from 'react-redux'\nimport { BookingActions } from '../store/action/BookingActions'\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport DateDiff from 'date-diff'\n\nclass BodyBooking extends Component {\n\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n    }\n\n    state = {\n        IdRoom: '',\n        Room_name: '',\n        DateStart: '',\n        DateEnd: '',\n        number: '',\n        Loading: false,\n        available: '',\n        per_price: '',\n    }\n\n    componentDidMount() {\n        const { id_hotel, Hotel, available, price } = this.props\n        this.setState({ IdRoom: id_hotel, Room_name: Hotel, available: available, per_price: price })\n\n    }\n\n\n    handleFormChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        });\n\n    }\n\n    clearState() {\n        const state = {\n            IdRoom: '',\n            Room_name: '',\n            DateStart: '',\n            DateEnd: '',\n            number: '',\n            Loading: false,\n            available: '',\n            per_price: '',\n        }\n        this.setState(state)\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { IdRoom, DateStart, DateEnd, number, Room_name,price } = this.state\n\n       \n        const { props, state } = this;\n        const { firebase } = props;\n        var diff = new DateDiff(new Date(DateEnd), new Date(DateStart));\n        const price_all=this.calculate(diff.days())\n\n        const data = {\n            Date: new Date().toLocaleDateString(),\n            IdRoom: IdRoom,\n            Hotel_name : this.props.hotel_name,\n            DateStart: new Date(DateStart).toLocaleDateString(),\n            Room_name: Room_name,\n            DateEnd: new Date(DateEnd).toLocaleDateString(),\n            number: number,\n            price:price_all\n        }\n\n        this.props.BookingActions(data, firebase)\n\n        this.clearState()\n        this.props.close()\n        // setTimeout(function() {\n        //   }, 0);\n    }\n\n    calculate = (day) => {\n        return (\n            (parseInt(this.state.per_price) * parseInt(this.state.number)) * parseInt(day)\n        )\n    }\n\n\n\n\n    render() {\n        const { Room_name, available } = this.state\n        // if(Loading){\n        return (\n            <React.Fragment  >\n\n                <h3>{Room_name}</h3>\n                <hr className=\"margin2\" />\n                <Form\n                    ref=\"form\"\n                    onSubmit={this.handleSubmit}\n                >\n                    <Grid columns={2}  >\n                        <Grid.Row  >\n                            <Grid.Column>\n                                <span>Date Start : </span>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Input\n                                    type=\"date\"\n                                    name=\"DateStart\"\n                                    value={this.state.DateStart}\n                                    onChange={this.handleFormChange}\n                                    data-date-format=\"DD/MM/YYYY\"\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                    placeholder='Name'\n                                />\n                            </Grid.Column>\n\n\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <span>Date End : </span>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Input\n                                    type=\"date\"\n                                    name=\"DateEnd\"\n                                    value={this.state.DateEnd}\n                                    min={this.state.DateStart}\n                                    validators={['required']}\n                                    data-date-format=\"DD/MM/YYYY\"\n                                    onChange={this.handleFormChange}\n                                    errorMessages={['this field is required']}\n                                    placeholder='Name'\n                                />\n                            </Grid.Column>\n\n\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <span>Number Of Room : </span>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Input\n                                    type=\"number\"\n                                    name=\"number\"\n                                    max={available}\n                                    min='1'\n                                    value={this.state.number}\n                                    validators={['required']}\n                                    onChange={this.handleFormChange}\n                                    errorMessages={['this field is required']}\n                                    placeholder='number'\n                                />\n                            </Grid.Column>\n\n                        </Grid.Row>\n                        <Grid.Row centered>\n                            <Button type='submit' >Submit</Button>\n                        </Grid.Row>\n\n\n\n                    </Grid>\n                </Form>\n\n            </React.Fragment>\n        )\n\n    }\n    // }\n\n}\nconst mapStateToProps = state => ({\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n});\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        BookingActions: (booking) => dispatch(BookingActions(booking))\n    }\n}\n\n\n\nexport default compose(\n    firebaseConnect(),\n    connect(mapStateToProps, mapDispatchToProps),\n)(BodyBooking);\n","\nexport const BookingActions =(booking,firebase)=>{\n    return(dispatch, getState, { getFirestore })=> {\n        const authorId = getState().firebase.auth.uid;\n        // console.log(firebase)\n        // firebase.collection('Booking').add({\n        //     Date:booking.Date,\n        //     Room_name:booking.Room_name,\n        //     number:booking.number,\n        //     DateEnd:booking.DateEnd,\n        //     DateStart:booking.DateStart,\n        //     authorId\n        // }).then(()=>dispatch({type : 'ADD_BOOKING', booking})) \n        // .catch(err => dispatch({\n        //     type: 'CREATE_PROJECT_ERROR',\n        //     err,\n        //   }));\n        dispatch({type : 'ADD_BOOKING', booking})\n    }\n}","import React, { Component } from 'react'\n\nimport Model from '../Components/Model'\nimport BodyBooking from './BodyBooking'\nclass BookingRoom extends Component {\n\n    \n    render() {\n        const close = this.props.close\n        const {id_hotel,Hotel,available,price}= this.props\n        // let {Username,Password}=this.state\n        return (\n            \n            <React.Fragment  >\n                <Model \n                    setModal={this.props.setModal} \n                    header=\"BOOKING\"\n                    body={<BodyBooking  id_hotel={id_hotel} Hotel={Hotel}  close={close} price={price} hotel_name={this.props.hotel_name}/>} close={close}\n                    available={available}\n                    />          \n            </React.Fragment>\n        )\n    }\n\n}\n\n\n\nexport default BookingRoom","import React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nconst MessageExampleError = (props) => {\n    return (\n        <Message negative>\n            <Message.Header>{props.Header}</Message.Header>\n            <p>{props.Body}</p>\n        </Message>\n    )\n}\n\nexport default MessageExampleError\n","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { Form, Input } from 'semantic-ui-react-form-validator'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport MessageExampleError from '../Components/Message'\n\n\nconst BodyLogin=(props)=>{\n\n    \n\n        const checkLogin = () => {\n            if (props.authError === 'Login fail') {\n                return (\n                    <MessageExampleError Header='warning' Body='warning login failed. please try again' />\n                )\n            }\n        }\n        const { handleFormChange, handleSubmit, password, email } = props\n        const onClose=()=>{\n            props.close()\n        }\n\n        return (\n            <React.Fragment  >\n\n                <Form style={{ padding: '2%' }}\n                    onSubmit={handleSubmit}\n                >\n                   {checkLogin()}\n\n                    <Input\n                        type=\"email\"\n                        label=\"email\"\n                        name=\"email\"\n                        onChange={handleFormChange}\n                        value={email}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        placeholder='email'\n                    />\n                    <Input\n                        type=\"password\"\n                        label=\"password\"\n                        name=\"password\"\n                        onChange={handleFormChange}\n                        value={password}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        \n                        placeholder='password'\n                    />\n                    <Button type='submit'>Submit</Button>\n                   \n                </Form>\n                <p>Don't have account ? <Link to='../Register'  onClick={onClose.bind()}>Create an account</Link></p>\n            </React.Fragment>\n        )\n    \n\n}\n\nconst mapStateToProps = state => ({\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n});\n\n\nexport default connect(mapStateToProps)(BodyLogin)","import React, { Component } from 'react'\n\nimport BodyLogin from './BodyLogin'\nimport Model from '../Components/Model'\nimport { connect } from 'react-redux'\nimport { SingIn } from '../store/action/AuthAction'\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props)\n    }\n    state = {\n        email: '',\n        password: '',\n\n    }\n\n    handleFormChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        });\n\n    }\n  \n    clearState() {\n        const reset = {\n            email: '',\n            password: '',\n        }\n        this.setState(reset)\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n     \n        const { props, state } = this;\n        const { firebase } = props;\n        const credentials = { ...state };\n        const authData = {\n            credentials,\n            firebase\n        };\n\n        this.props.SingIn(authData)\n    }\n\n\n\n    render() {\n      \n        const { auth, authError } = this.props;\n        const close = this.props.close\n        let { email, password } = this.state\n       \n        \n        return (\n\n            <React.Fragment  >\n                <Model\n                    setModal={this.props.setModal}\n                    close={close}\n                    header=\"LOGIN\"\n                    body={<BodyLogin\n                        handleFormChange={this.handleFormChange}\n                        handleSubmit={this.handleSubmit}\n                        email={email}\n                        password={password}\n                        close={close}\n                        />}\n                />\n               \n            </React.Fragment>\n        )\n      \n    }\n   \n    \n\n}\n\nconst mapStateToProps = state => ({\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    SingIn: credentials => dispatch(SingIn(credentials)),\n});\n\nexport default compose(\n    firebaseConnect(),\n    connect(mapStateToProps, mapDispatchToProps),\n)(Login);","\n// import  { db } from '../../config/fbConfig';\n// import 'firebase/auth';\n// import 'firebase/firestore';\n\nexport const SingIn = ({ credentials, firebase }) => {\n  return (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  }\n\n};\n\n\nexport const SignOut = firebase => (dispatch, getState) => {\n\n  firebase.auth().signOut().then(() => {\n    dispatch({ type: 'SIGNOUT_SUCCESS' });\n  });\n};\n\nexport const SignUp = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n  const firestore = getFirestore();\n  console.log(firebase)\n  firebase.auth().createUserWithEmailAndPassword(\n    newUser.email,\n    newUser.password,\n  )\n    .then(resp => firestore.collection('users').doc(resp.user.uid).set({\n      firstName: newUser.firstName,\n      lastName: newUser.lastName,\n      birdday: newUser.birdday,\n      initials: `${newUser.firstName[0]}${newUser.lastName[0]}${newUser.birdday[0]}`,\n    }))\n    .then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    })\n    .catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err });\n    });\n};\n","import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\n\nclass Listproperty extends Component {\n\n    render() {\n\n        const detail = this.props.item\n        console.log(detail)\n\n\n\n\n        return (\n            <React.Fragment>\n                <Grid  >\n                    <Grid.Row>\n                        <ul>\n                            <Grid.Column>\n                                {detail.map((item, i) => {\n                                    {\n                                        return (\n                                            <li key={i}>{item}</li>\n                                        )\n                                    }\n                                })}\n                            </Grid.Column>\n                        </ul>\n                    </Grid.Row>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Listproperty","import React, { Component } from 'react'\nimport { Table, Button } from 'semantic-ui-react'\nimport BookingRoom from './BookingRoom'\nimport Login from '../Login/Login'\nimport Listproperty from './Listproperty'\nimport { connect } from 'react-redux'\n\nclass Room extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n\n    state = { open: false }\n\n    show = (dimmer) => () => this.setState({ dimmer, open: true })\n    close = () => this.setState({ open: false })\n    handleItemClick = (e, { name }) => this.setState({ open: true }) \n\n\n    render() {\n        const room = this.props.room\n        const {auth}=this.props\n       \n        return (\n        room.map((item) => {\n            return (\n                <React.Fragment  key={item.id}>\n                    <Table.Row>\n                        <Table.Cell>\n                            {item.name}\n                        </Table.Cell>\n                        <Table.Cell ><Listproperty item={item.detail}/></Table.Cell>\n                        <Table.Cell>\n                            {item.sizeRoom}\n                        </Table.Cell>\n                        <Table.Cell textAlign='right'>\n                            {item.available}\n                        </Table.Cell>\n                        <Table.Cell textAlign='right'>\n                            ${item.price}\n                        </Table.Cell>\n                        <Table.Cell>\n                       { item.available >0 ? <Button  onClick={this.handleItemClick} primary>BOOKING</Button> : <Button  onClick={this.handleItemClick} primary disabled>BOOKING</Button> }\n                            \n                            \n                        </Table.Cell>\n                    </Table.Row>\n                    {\n                        auth.uid? \n                        <BookingRoom \n                            setModal={this.state} \n                            close={this.close} \n                            key={item.id} \n                            id_hotel={item.id} \n                            Hotel={item.name} \n                            price={item.price}\n                            available={item.available}\n                            hotel_name={this.props.hotel}/>\n                        :<Login setModal={this.state} close={this.close} key={item.id}/>\n                        \n                    }\n                   \n                </React.Fragment>\n                )\n            }\n        ))\n    }\n}\nconst mapStateToProps = state => ({\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n});\n\n\nexport default connect(mapStateToProps)(Room)\n","import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\n \nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  displayMarkers = () => {\n   \n      return <Marker position={{\n       lat: this.props.lat,\n       lng: this.props.lon\n     \n    }}\n    ></Marker>\n  }\n  \n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%',\n    };    \n\n    return (\n        <Map\n          google={this.props.google}\n          zoom={8}\n          style={mapStyles}\n          initialCenter={{ lat: this.props.lat, lng: this.props.lon}}\n        >\n          {this.displayMarkers()}\n        </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCw1Cu5QmZqsFLWq-D7m12E3Qqjjj13xWY'\n})(SimpleMap)","import React, { Component } from 'react'\nimport { Container, Table, Grid } from 'semantic-ui-react'\nimport Room from './Room'\nimport SimpleMap from '../Map/SimpleMap'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Listproperty from './Listproperty'\n\n\nclass DetailHotel extends Component {\n    _isMounted = false;\n    state = {\n        activeItem: 'Detail',\n        data: [],\n        location:'',\n        latiture:'',\n        Loading: false\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n\n    componentDidMount() {\n        this._isMounted = true;\n        axios.get(`https://cb5e1f83-a66c-46ba-b49b-5c52f546772a.mock.pstmn.io/hotel/${this.props.match.params.id}`)\n            .then(res => {\n               if (this._isMounted) {\n\n                    const data = res.data.data;\n                    this.setState({ data: data, Loading: true ,latiture : data.location.latiture,lontiture : data.location.lontiture})\n\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentWillUnmount() {\n       \n        this._isMounted = false;\n        this.setState({ activeItem: 'Detail',\n        data: [],\n        location:'',\n        latiture:'',\n        Loading: false})\n      }\n\n    render() {\n        const { data,latiture,lontiture } = this.state\n        console.log(data.property)\n\n        const room = () => {\n            if (this._isMounted) {\n                return (<Room room={data.Room} hotel={data.name_hotel} />)\n            }\n        }\n\n        return (\n            <React.Fragment>\n\n            \n                <Container className='body'>\n\n                    <Grid >\n                        <Grid.Row>\n                            <Grid.Column width={10}>\n                                <h2>About</h2>\n                                <span>{data.detail_hotel}</span>\n                                <h2>Property amenities</h2>\n                                <span>{this._isMounted?<Listproperty item={data.property} />:null}</span>\n                            </Grid.Column>\n                            <Grid.Column width={5}>\n                                <h2>Contact</h2>\n                                <p>Address : <span>{data.address}</span></p>\n                                <p>Tel :<span>{data.contact}</span></p>\n                                <p>Website page : <Link to='{data.websize}'>Click HERE</Link> </p>\n                                <div  style={{height:'50px'}}> \n                                   \n                                    <SimpleMap lat={latiture} lon={lontiture} />\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row className='marginT2'>\n                        <Grid.Column >\n                            <h2> Meditation room</h2>\n                            <Table celled padded>\n                           \n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell singleLine style={{ width: '20%' }}>Type</Table.HeaderCell>\n                                        <Table.HeaderCell style={{ width: '25%' }}>Detail</Table.HeaderCell>\n                                        <Table.HeaderCell style={{ width: '10%' }}>guests</Table.HeaderCell>\n                                        <Table.HeaderCell style={{ width: '10%' }}>available rooms</Table.HeaderCell>\n                                        <Table.HeaderCell style={{ width: '15%' }}>Price</Table.HeaderCell>\n                                        <Table.HeaderCell></Table.HeaderCell>\n                                    </Table.Row >\n                                </Table.Header>\n                                <Table.Body>\n                                    {room()}\n\n                                </Table.Body>\n                            </Table>\n                            </Grid.Column >\n                        </Grid.Row>\n                    </Grid>\n\n\n\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default DetailHotel","import React, { Component } from 'react'\nimport { Header, Table } from 'semantic-ui-react'\n\n\nclass ListBooking extends Component {\n\n    render() {\n        const booking = this.props.item\n        return (\n            <React.Fragment key={this.props.key}>\n               \n\n                <Table.Row>\n                    <Table.Cell>\n                        \n                    {this.props.num}\n                    </Table.Cell>\n                    <Table.Cell singleLine>\n                        {booking.Date}\n                        </Table.Cell>\n                    <Table.Cell>\n                    \n                    {booking.Hotel_name}\n                    </Table.Cell>\n                    <Table.Cell >\n                    {booking.Room_name}\n                    </Table.Cell>\n                    <Table.Cell>\n                    {booking.number}\n                    </Table.Cell>\n                    <Table.Cell>\n                    {booking.DateStart}-{booking.DateEnd}\n                    </Table.Cell>\n                    <Table.Cell>{booking.price}</Table.Cell>\n                    \n                </Table.Row>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default ListBooking","import React from 'react'\nimport Head from '../Header/Head'\nimport { Container, Table } from 'semantic-ui-react'\nimport ListBooking from './ListBooking'\nimport { connect } from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nconst Booking =(props)=> {\n   \n       const {auth,profile}=props\n       console.log(props.booking)\n\n        if(!auth.uid){\n          return <Redirect to='/'/>\n        }\n        // const authorId = getState().firebase.auth.uid;\n\n        console.log(auth)\n        return (\n           \n            <React.Fragment>\n\n                <Head />\n                <Container  className='body'>\n                    <h1 style={{ margin: '5%' }} align='center'>MY BOOKING</h1>\n                       <h3>FIRST NAME :{profile.firstName}  </h3>\n                       <h3 style={{marginBottom:'2%'}}>    LAST NAME :{profile.lastName}</h3>\n                        <Table celled padded>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell singleLine style={{ width: '5%' }}>No.</Table.HeaderCell>\n                                <Table.HeaderCell style={{ width: '10%' }}>Booking date</Table.HeaderCell>\n                                <Table.HeaderCell singleLine style={{ width: '15%' }}>Hotel</Table.HeaderCell>\n                                <Table.HeaderCell style={{ width: '15%' }}>Room</Table.HeaderCell>\n                                <Table.HeaderCell style={{ width: '10%' }}>Number</Table.HeaderCell>\n                                <Table.HeaderCell style={{ width: '30%' }}>Check in - Check out date</Table.HeaderCell>\n                                <Table.HeaderCell style={{ width: '10%' }}>Price</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {\n                              \n                                props.booking.map((item,i)=>\n                                \n                                <ListBooking key={item.id} item={item} num={i+1}/>\n                                )\n                           \n                            }\n                           \n                        </Table.Body>\n                    </Table>\n                    \n                   \n                </Container>\n            </React.Fragment>\n        )\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        booking: state.booking,\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n    }\n}\n\nexport default connect(mapStateToProps)(Booking)","import React, { Component } from 'react'\nimport { Button, Container } from 'semantic-ui-react'\nimport { Form, Input } from 'semantic-ui-react-form-validator'\nimport { connect } from 'react-redux'\nimport { SignUp } from '../store/action/AuthAction'\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport {Redirect} from 'react-router-dom'\nimport MessageExampleError from '../Components/Message'\n\nclass Register extends Component {\n\n    constructor(props){\n        super(props)\n    }\n    state = {\n        firstName: '',\n        lastName: '',\n        birdday: '',\n        email: '',\n        password: ''\n\n    }\n\n    handleFormChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        });\n\n    }\n\n    handeleSubmit = (e) => {\n        e.preventDefault();\n\n        const { props, state } = this;\n        const { firebase } = props;\n        const newUser = { ...state };\n        this.props.SignUp(newUser, firebase);\n\n    }\n\n\n\n\n\n    render() {\n        const {auth}=this.props\n        if(auth.uid)\n        {\n            return <Redirect to='/'/>\n        }\n\n        const checkRegis = () => {\n            if (this.props.authError === 'SIGNUP_ERROR') {\n                return (\n                    <MessageExampleError Header='warning' Body='Please check your email' />\n                )\n            }\n        }\n\n        return (\n            <React.Fragment>\n                <Container className='body'>\n                    <h1>Register</h1>\n\n                    <Form\n                        ref=\"form\"\n                        onSubmit={this.handeleSubmit}\n                    >\n                         {checkRegis()}\n                        <Input\n                            type=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            onChange={this.handleFormChange}\n                            value={this.state.email}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                            placeholder='Email'\n                        />\n                        <Input\n                            type=\"password\"\n                            label=\"Password\"\n                            name=\"password\"\n                            onChange={this.handleFormChange}\n                            value={this.state.password}\n                            minLength=\"8\"\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                            placeholder='Password'\n                        />\n                        <Input\n                            type=\"text\"\n                            label=\"First Name\"\n                            name=\"firstName\"\n                            onChange={this.handleFormChange}\n                            value={this.state.firstName}\n                            validators={['required']}\n                            // pattern = \"[A-Za-z]\"\n                            errorMessages={['this field is required']}\n                            placeholder='First Name'\n                        />\n                        <Input\n                            type=\"text\"\n                            label=\"Last Name\"\n                            name=\"lastName\"\n                            onChange={this.handleFormChange}\n                            value={this.state.lastName}\n                            // pattern = \"[A-Za-z]\"\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                            placeholder='Last Name'\n                        />\n                        <Input\n                            type=\"Date\"\n                            label=\"Birth Data\"\n                            name=\"birdday\"\n                            onChange={this.handleFormChange}\n                            value={this.state.birdday}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                            placeholder='Birth Data'\n                        />\n\n                        <Button color=\"teal\">Submit</Button>\n                    </Form>\n                </Container>\n\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst mapStateToProps=(state)=>({\n    auth : state.firebase.auth,\n    authError: state.auth.authError,\n})\n\nconst mapDispatchToProps=dispatch=>({\n    SignUp: (newUser, firebase) => dispatch(SignUp(newUser, firebase)),\n})\n\n\n\nexport default compose(\n    firebaseConnect(),\n    connect(mapStateToProps, mapDispatchToProps),\n)(Register);","import React, { Component } from 'react';\nimport { Menu} from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport {SignOut} from '../store/action/AuthAction'\n\nclass NavLogin extends Component {\n    constructor(props){\n        super(props)\n    }\n   \n    render() {\n        const { activeItem } = this.props.value\n\n        const handleSignOut = () => {\n            const { firebase } = this.props;\n            this.props.SignOut(firebase);\n          };\n\n        return (\n\n            <React.Fragment >\n              \n                        <Menu.Item\n                            name='MY BOOKING'\n                            as={NavLink}\n                            to=\"/Booking\"\n                            active={activeItem === 'MY BOOKING'}\n                            onClick={this.props.handleItemClick}\n                        />\n                        \n                        <Menu.Menu position='right'>\n                            <Menu.Item\n                                name='LOGOUT'\n                                active={activeItem === 'LOGOUT'}\n                                onClick={handleSignOut}\n                            />\n                        </Menu.Menu>\n\n            </React.Fragment>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    SignOut: firebase => dispatch(SignOut(firebase)),\n  });\n  \nexport default compose(\n    firebaseConnect(),\n    connect(null, mapDispatchToProps),\n  )(NavLogin);\n","import React, { Component } from 'react';\nimport { Menu} from 'semantic-ui-react'\n\nclass NavBar extends Component {\n\n    render() {\n        const { activeItem } = this.props.value\n\n        return (\n\n            <React.Fragment >\n              \n                        <Menu.Menu position='right'>\n                            <Menu.Item\n                                name='LOGIN'\n                                active={activeItem === 'LOGIN'}\n                                onClick={this.props.handleItemClick}\n                            />\n                        </Menu.Menu>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default NavBar","import React, { Component } from 'react';\nimport { Menu } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom';\nimport Login from '../Login/Login'\nimport NavLogin from './NavLogin'\nimport NavLogout from './NavLogout'\nimport {connect} from 'react-redux'\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nclass NavBar extends Component {\n    constructor(props){\n        super(props)\n    }\n    state = { activeItem: 'home', open: false }\n\n    show = (dimmer) => () => this.setState({ dimmer, open: true })\n    close = () => this.setState({ open: false })\n    handleItemClick = (e, { name }) => \n        (name === 'LOGIN') ? this.setState({ activeItem: name, open: true }) : this.setState({ activeItem: name })\n\n    render() {\n        const { activeItem } = this.state\n        const { auth, profile } = this.props;\n        const links = auth.uid ?  <NavLogin profile={profile}  handleItemClick={this.handleItemClick} value={activeItem} />:<NavLogout handleItemClick={this.handleItemClick} value={activeItem}/> ;\n        console.log(profile)\n        return (\n\n            <React.Fragment >\n                <div className='Nav'>\n                    <Menu secondary   >\n                        <Menu.Item\n                            as={NavLink}\n                            to=\"/\"\n                            name='HOME'\n                            active={activeItem === 'HOME'}\n                            onClick={this.handleItemClick}\n                        />\n                        {links}\n\n                        <Login setModal={this.state} close={this.close} />\n                    </Menu>\n\n\n                </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  });\n  \n  export default compose(\n    firebaseConnect(),\n    connect(mapStateToProps),\n  )(NavBar);","import React from 'react'\n\nconst AppFooter = () => (\n    <footer className=\"footer\">\n      <p>TEST HOTEL</p>\n    </footer>\n  );\n\nexport default AppFooter;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter,Route } from \"react-router-dom\";\nimport Showhotel from './Showhotel/Showhotel'\nimport DetaiHotel from './Detail/DetaiHotel'\nimport Booking from './Booking/Booking'\nimport Login from './Login/Login'\nimport Register from './Header/Register'\nimport NavBar from './Header/NavBar'\nimport AppFooter from './AppFooter'\nimport SimpleMap from './Map/SimpleMap'\n\nclass App extends Component {\n\n  \n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <switch>\n            <Route exact path={\"/\"} component={Showhotel} />\n            <Route exact path={\"/DetaiHotel/:id\"} component={DetaiHotel} />\n            <Route exact path={\"/Login\"} component={Login} />\n            <Route exact path={\"/Register\"} component={Register} />\n            <Route exact path={\"/Booking\"} component={Booking} />\n            <Route exact path={\"/BodyBooking\"} component={Booking} />\n            \n          </switch>\n          <AppFooter/>\n        </div>\n\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {};\n\nconst AuthReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login fail',\n            }\n\n\n\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: 'Login success',\n            };\n\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n\n\n        case 'SIGNUP_SUCCESS':\n            console.log('SIGNUP_SUCCESS');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_ERROR':\n            console.log('SIGNUP_ERROR');\n            return {\n                ...state,\n                authError: 'SIGNUP_ERROR',\n            };\n        default:\n            return state;\n\n    }\n   \n}\nexport default AuthReducer","\nconst BookingReducer =(state = [] ,action)=>{\n    switch(action.type){\n        case 'ADD_BOOKING':\n            console.log(\"create success\",action.booking)\n            return state.concat([action.booking])\n        case 'CREATE_PROJECT_ERROR':\n            console.log(\"create error\",action.booking)\n            return state\n        default:\n            return state\n\n    }\n\n}\nexport default BookingReducer","import AuthReducer from './AuthReducer'\nimport BookingReducer from './BookingReducer'\nimport {firebaseReducer} from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'; \n\nimport {combineReducers} from 'redux'\n\nconst RootReducer=combineReducers({\n    auth : AuthReducer,\n    booking : BookingReducer,\n    firestore: firestoreReducer,\n    firebase:firebaseReducer\n})\n\nexport default RootReducer","const app = require('@firebase/app');\nrequire('@firebase/auth');\nrequire('@firebase/firestore');\n\nconst firebase = app.firebase\n\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAu2RTm5j8kfeNSD8WlnndhIFE06qPoH0I\",\n    authDomain: \"hotel-9274b.firebaseapp.com\",\n    databaseURL: \"https://hotel-9274b.firebaseio.com\",\n    projectId: \"hotel-9274b\",\n    storageBucket: \"hotel-9274b.appspot.com\",\n    messagingSenderId: \"1003610560283\",\n    appId: \"1:1003610560283:web:ba2f6c4d14fa3b5023a5be\",\n    measurementId: \"G-M8W76BYXSQ\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  // firebase.firestore(); // We don't need this anymore because we create firestore in index.js\n  \n  const db = firebase.firestore();\n  export { db };\n  export default firebase;\n  \n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport RootReducer from './store/reducer/RootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport  firebase from './config/fbConfig'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\nconst rrfConfig = {\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  userProfile: 'users',\n  attachAuthIsReady: true,\n};\n\n\n\nconst store = createStore(RootReducer,\n    composeEnhancers(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebase),\n    ));\n  \n  const rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance, \n  };\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root'),\n  );\n\nconsole.log('store', store);\nconsole.log('state', store.getState());\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}